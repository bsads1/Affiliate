@page "/dashboard"
@using Microsoft.EntityFrameworkCore
@using Affiliate.Application.Extensions
@using Affiliate.Application.Enums
@attribute [Authorize]
@layout WebLayout
@inject IDbContextFactory<DatabaseContext> Factory
@inject OrderPointService OrderPointService

<PageTitle>Dashboard</PageTitle>
@if (User != null)
{
    <div class="container mb-3">
        <div class="rounded-2lg border border-jacarta-100 bg-white p-6 text-center transition-shadow hover:shadow-lg dark:border-jacarta-600 dark:bg-jacarta-700">
            <h1 class="text-3xl font-bold text-white">
                Thành viên (@User.Points điểm)
            </h1>
            <div class="flex">
                <style>
                    me .icon{
                        position: relative;
                        overflow: hidden;
                        margin: 0;
                        text-align: center;
                        vertical-align: middle;
                        border-radius:50%;
                        padding: 0.25rem !important;
                        line-height: 30px;
                        height: 30px;
                        width: 30px;
                        box-shadow:0 3px 10px rgba(247, 53, 99, 0.2) !important;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                    }
                    me .icon >div{
                        line-height: normal;
                        display: flex;
                        align-content: center;
                        align-items: center;
                        justify-content: center;
                        height: 100%;
                        width: 100%;
                    }
                    me .icon-deposit{
                        background-color: #007bff;
                    }
                    
                    me .icon-withdraw{
                        background-color: #dc3545;   
                    }
                </style>
                <div class="w-1/2 p-4">
                    <a class="rounded-full bg-dark text-white w-full p-2 flex items-center gap-3" href="/user/deposit">
                        <div class="icon icon-deposit">
                            <div>
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down-left" viewBox="0 0 16 16">
                                    <path fill-rule="evenodd" d="M2 13.5a.5.5 0 0 0 .5.5h6a.5.5 0 0 0 0-1H3.707L13.854 2.854a.5.5 0 0 0-.708-.708L3 12.293V7.5a.5.5 0 0 0-1 0z"/>
                                </svg>
                            </div>
                        </div>
                        <div>Nạp tiền vào ví</div>
                    </a>
                </div>
                <div class="w-1/2 p-4">
                    <a class="rounded-full bg-dark text-white w-full p-2 flex items-center gap-3" href="/user/withdraw">
                        <div class="icon icon-withdraw">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-up-right" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M14 2.5a.5.5 0 0 0-.5-.5h-6a.5.5 0 0 0 0 1h4.793L2.146 13.146a.5.5 0 0 0 .708.708L13 3.707V8.5a.5.5 0 0 0 1 0z"/>
                            </svg>
                        </div>
                        <div>Rút tiền khỏi ví</div>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="container mb-3">
        <div class="rounded-2lg bg-dark text-white w-full p-2 flex flex-col gap-3">
            <div class="flex flex-col">
                <strong class="text-white">Lịch sử nạp</strong>

                <table class="table mt-3">
                    <thead>
                    <tr>
                        <th class="text-left">Thời gian</th>
                        <th class="text-right">Số tiền</th>
                        <th class="text-right">Số điểm</th>
                        <th class="text-right">Quy đổi</th>
                        <th class="text-right">Trạng thái</th>
                    </tr>
                    </thead>
                    <tbody>
                    @if (OrderList.Any())
                    {
                        foreach (var order in OrderList)
                        {
                            <tr>
                                <td>@order.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                <td class="text-right">@order.Amount.AddDecimalSeparator() đ</td>
                                <td class="text-right">@order.Points.AddDecimalSeparator()</td>
                                <td class="text-right">@order.ExchangeRate.AddDecimalSeparator() đ/điểm</td>
                                <td class="text-right">
                                    @if (order.Status == OrderPointStatus.Completed.ToString())
                                    {
                                        <span class="text-green">Hoàn thành</span>
                                    }
                                    else if (order.Status == OrderPointStatus.Pending.ToString())
                                    {
                                        <span class="text-yellow">Đang xử lý</span>
                                    }
                                    else if (order.Status == OrderPointStatus.Rejected.ToString())
                                    {
                                        <span class="text-red">Tư chối</span>
                                    }
                                </td>
                            </tr>
                        }
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="container mb-3">
        <div class="rounded-2lg bg-dark text-white w-full p-2 flex flex-col gap-3">
            <div class="flex flex-col">
                <strong class="text-white">Lịch sử rút</strong>

                <table class="table mt-3">
                    <thead>
                    <tr>
                        <th class="text-left">Thời gian</th>
                        <th class="text-right">Số tiền</th>
                        <th class="text-right">Số điểm</th>
                        <th class="text-left">Ngân hàng</th>
                        <th class="text-left">Ghi chú</th>
                        <th class="text-right">Trạng thái</th>
                    </tr>
                    </thead>
                    <tbody>
                    @if (WithdrawList.Any())
                    {
                        foreach (var order in WithdrawList)
                        {
                            <tr>
                                <td>@order.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                <td class="text-right">@order.Amount.AddDecimalSeparator() đ</td>
                                <td class="text-right">@order.Points.AddDecimalSeparator()</td>
                                <td class="text-left">
                                    <div>@order.BankName</div>
                                    <div>@order.AccountNumber</div>
                                </td>
                                <td class="text-left">@order.Note</td>
                                <td class="text-right">
                                    @if (order.Status == OrderPointStatus.Completed.ToString())
                                    {
                                        <span class="text-green">Hoàn thành</span>
                                    }
                                    else if (order.Status == OrderPointStatus.Pending.ToString())
                                    {
                                        <span class="text-yellow">Đang xử lý</span>
                                    }
                                    else if (order.Status == OrderPointStatus.Rejected.ToString())
                                    {
                                        <span class="text-red">Tư chối</span>
                                    }
                                </td>
                            </tr>
                        }
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@code{

    [CascadingParameter] public PageState PageState { get; set; } = default!;
    private User User { get; set; }
    private List<OrderPoint> OrderList { get; set; } = [];
    private List<Withdraw> WithdrawList { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        await using var context = await Factory.CreateDbContextAsync();
        User = await context.Users.FirstOrDefaultAsync(u => u.Id == PageState.User.Id);
        OrderList = await OrderPointService.GetOrderListAsync(PageState.User.Guid);
        WithdrawList = await OrderPointService.GetWithdrawListAsync(PageState.User.Guid);
    }
}