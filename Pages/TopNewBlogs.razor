@using Microsoft.EntityFrameworkCore
@using Affiliate.Application.Enums
@inject IDbContextFactory<DatabaseContext> Factory
<div class="grid grid-cols-3 gap-[1.875rem] sm:grid-cols-4 md:grid-cols-3">
    @if (Blogs.Any())
    {
        foreach (var blog in Blogs)
        {
            <article class="w-full">
                <div class="overflow-hidden rounded-2.5xl transition-shadow hover:shadow-lg">
                    <figure class="group overflow-hidden">
                        <a href="/post/@blog.Slug">
                            <img src="/@blog.Image" onerror="this.onerror=null;this.src='/images/no-image.jpg';" alt="@blog.Name" class="h-full w-full object-cover transition-transform duration-[1600ms] will-change-transform group-hover:scale-105">
                        </a>
                    </figure>

                    <div class="rounded-b-[1.25rem] border border-t-0 border-jacarta-100 bg-white p-[10%] dark:border-jacarta-600 dark:bg-jacarta-700">
                        <h2 class="mb-4 font-display text-xl text-jacarta-700 hover:text-accent dark:text-white dark:hover:text-accent">
                            <a href="/post/@blog.Slug">@blog.Name</a>
                        </h2>
                        <div class="flex flex-wrap items-center space-x-2 text-sm text-jacarta-400">
                            <span>
                                <time datetime="@blog.CreatedAt.ToString("dd-MM-yyyy")">@blog.CreatedAt.ToString("dd-MM-yyyy HH:mm")</time>
                            </span>
                        </div>
                    </div>
                </div>
            </article>
        }
    }
</div>

@code {
    private List<PageItem> Blogs { get; set; } = [];

    protected override void OnInitialized()
    {
        var dbContext = Factory.CreateDbContext();
        var query = dbContext.PageItems
            .AsNoTracking()
            .Where(p => p.IsDelete == false && p.IsShow && p.Type == PageItemType.Blog.ToString())
            .OrderBy(p => p.CreatedAt)
            .Take(9);
        Blogs = query.ToList();
    }

}