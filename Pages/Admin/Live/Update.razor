@page "/admin/live/update/{LiveId:int}"
@using Microsoft.EntityFrameworkCore
@using Affiliate.Application.Dtos
@using Affiliate.Application.Extensions
@attribute [Authorize(Policy = CustomPolicies.MasterAdminAccess)]
@inject DatabaseContext DbContext
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>@PageTitle</PageTitle>
<Toolbar PageTitle="@PageTitle" ToolbarItems="@ToolbarItems"></Toolbar>
@if (LiveStream is { Id: > 0 })
{
    <div class="flex gap-4">
        <div class="w-1/2">
            <div class="card card-compact w-100 bg-base-100 shadow-xl">
                <div class="card-body">
                    <div id="alert"></div>
                    <div class="space-y-3">
                        <div class="grid grid-cols-1 gap-4">
                            @if (LiveStream.IsEnd)
                            {
                                <div class="flex items-center">
                                    <span class="font-medium text-gray-700 mr-4">Status:</span>
                                    <span class="text-red-500">Ended</span>
                                </div>
                            }
                            else
                            {
                                <div class="flex items-center">
                                    <span class="font-medium text-gray-700 mr-4">Status:</span>
                                    <span class="text-green-500">Live</span>
                                </div>
                            }
                            <div class="flex items-center justify-between">
                                <div class="flex items-center flex-col gap-2">
                                    <span class="font-medium text-gray-700 mr-4">Live start time:</span>
                                    <strong>@LiveStream.StartTime.ToString("dd/MM/yyyy HH:mm")</strong>
                                </div>
                                <div class="flex items-center flex-col gap-2">
                                    <span class="font-medium text-gray-700 mr-4">Live end time:</span>
                                    <strong>
                                        @if (LiveStream.CloseTime != null)
                                        {
                                            <span>@LiveStream.CloseTime?.ToString("dd/MM/yyyy HH:mm")</span>
                                        }
                                        else
                                        {
                                            <span>Not set</span>
                                        }
                                    </strong>
                                </div>
                            </div>
                            <div class="flex items-center">
                                <span class="font-medium text-gray-700 mr-4">Title:</span>
                                <strong>@LiveStream.Title</strong>
                            </div>
                            <div class="flex items-center">
                                <span class="font-medium text-gray-700 mr-4">Ratio:</span>
                                <span>@LiveStream.Ratio</span>
                            </div>
                            <div class="flex justify-between">
                                <div class="flex items-center flex-col gap-2">
                                    <span class="font-medium text-gray-700 mr-4">Player 1:</span>
                                    <span>
                                        @LiveStream.Player1Name
                                        @if (LiveStream.Winner == 1)
                                        {
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trophy-fill" viewBox="0 0 16 16">
                                                <path d="M2.5.5A.5.5 0 0 1 3 0h10a.5.5 0 0 1 .5.5q0 .807-.034 1.536a3 3 0 1 1-1.133 5.89c-.79 1.865-1.878 2.777-2.833 3.011v2.173l1.425.356c.194.048.377.135.537.255L13.3 15.1a.5.5 0 0 1-.3.9H3a.5.5 0 0 1-.3-.9l1.838-1.379c.16-.12.343-.207.537-.255L6.5 13.11v-2.173c-.955-.234-2.043-1.146-2.833-3.012a3 3 0 1 1-1.132-5.89A33 33 0 0 1 2.5.5m.099 2.54a2 2 0 0 0 .72 3.935c-.333-1.05-.588-2.346-.72-3.935m10.083 3.935a2 2 0 0 0 .72-3.935c-.133 1.59-.388 2.885-.72 3.935"/>
                                            </svg>
                                        }
                                    </span>
                                    @if (LiveStream.Winner == 0)
                                    {
                                        <button type="button" onclick="setWinner(1)" class="btn btn-primary">Set as Winner</button>
                                    }
                                </div>
                                <div class="flex items-center">
                                    <strong class="font-medium text-gray-700 mr-4">vs</strong>
                                </div>
                                <div class="flex items-center flex-col gap-2">
                                    <span class="font-medium text-gray-700 mr-4">Player 2:</span>
                                    <span>
                                        @LiveStream.Player2Name
                                        @if (LiveStream.Winner == 2)
                                        {
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trophy-fill" viewBox="0 0 16 16">
                                                <path d="M2.5.5A.5.5 0 0 1 3 0h10a.5.5 0 0 1 .5.5q0 .807-.034 1.536a3 3 0 1 1-1.133 5.89c-.79 1.865-1.878 2.777-2.833 3.011v2.173l1.425.356c.194.048.377.135.537.255L13.3 15.1a.5.5 0 0 1-.3.9H3a.5.5 0 0 1-.3-.9l1.838-1.379c.16-.12.343-.207.537-.255L6.5 13.11v-2.173c-.955-.234-2.043-1.146-2.833-3.012a3 3 0 1 1-1.132-5.89A33 33 0 0 1 2.5.5m.099 2.54a2 2 0 0 0 .72 3.935c-.333-1.05-.588-2.346-.72-3.935m10.083 3.935a2 2 0 0 0 .72-3.935c-.133 1.59-.388 2.885-.72 3.935"/>
                                            </svg>
                                        }
                                    </span>
                                    @if (LiveStream.Winner == 0)
                                    {
                                        <button type="button" onclick="setWinner(2)" class="btn btn-primary">Set as Winner</button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="w-1/2">
            <div class="card card-compact w-100 bg-base-100 shadow-xl">
                <div class="card-body">
                    <div class="prose">
                        <h3>Bets for this Livestream</h3>
                    </div>
                    <div>
                        <strong>Summary:</strong>
                    </div>
                    <div class="overflow-x-auto">
                        <table class="table bg-white border-4 border-gray-200 text-end">
                            <thead>
                            <tr>
                                <th class="text-start">#</th>
                                <th>@LiveStream.Player1Name</th>
                                <th>@LiveStream.Player2Name</th>
                                <th>Total</th>
                            </tr>
                            </thead>
                            <tbody>
                            <tr>
                                <td class="text-start">Bet</td>
                                <td>@TotalPlayer1Bets.AddDecimalSeparator()</td>
                                <td>@TotalPlayer2Bets.AddDecimalSeparator()</td>
                                <td>@TotalBets.AddDecimalSeparator()</td>
                            </tr>
                            <tr>
                                <td class="text-start">Points</td>
                                <td>@TotalPlayer1Points.AddDecimalSeparator()</td>
                                <td>@TotalPlayer2Points.AddDecimalSeparator()</td>
                                <td>@TotalPoints.AddDecimalSeparator()</td>
                            </tr>
                            </tbody>
                        </table>
                    </div>
                    <div>
                        <strong>Bets:</strong>
                    </div>
                    <div hx-get="/admin/LoadBetOfLive/@LiveId" hx-swap="outerHTML" hx-trigger="load"></div>
                </div>
            </div>
        </div>
    </div>

    <script >
        function setWinner(player) {
            var player1Name = '@LiveStream.Player1Name';
            var player2Name = '@LiveStream.Player2Name';
            var winnerName = player == 1 ? player1Name : player2Name;
            $.confirm({
                title: 'Confirm!',
                content: 'Set ' + winnerName +' as winner and end the live stream!',
                buttons: {
                    confirm: function () {
                        fetch('/api/live/update-winner/' + @LiveId, {
                            method: 'POST',
                            headers: {
                                'Accept': 'application/json',
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                winner: player
                            })
                        })
                           .then(response => response.json())
                           .then(data => {
                                if (data.ok) {
                                    window.location.reload();
                                } else {
                                    $.alert({
                                        title: 'Error!',
                                        content: data.message,
                                        type: 'error'
                                    });
                                }
                            })
                           .catch(error => {
                                console.error('Error:', error);
                            });
                    },
                    cancel: function () {
                        return false;
                    }
                }
            });
        }
    </script>
}

@code {
    [Parameter] public int LiveId { get; set; }
    [CascadingParameter] public HttpContext HttpContext { get; set; } = default!;
    private Livestream LiveStream = new();
    private string PageTitle = "Update Livestream";
    private List<ToolbarItem> ToolbarItems = [];
    private int Count = 0;
    private List<Bet> Bets = [];

    private int TotalBets = 0;
    private int TotalPlayer1Bets = 0;
    private int TotalPlayer2Bets = 0;
    private long TotalPoints = 0;
    private long TotalPlayer1Points = 0;
    private long TotalPlayer2Points = 0;

    protected override async Task OnInitializedAsync()
    {
        LiveStream = await DbContext.Livestreams.AsNoTracking().FirstOrDefaultAsync(p => p.Id == LiveId);
        if (LiveStream == null)
        {
            var pastUrl = HttpContext.Request.Headers["Referer"].ToString();
            NavigationManager.NavigateTo(pastUrl, true);
        }

        PageTitle = "Update Livestream - " + LiveStream.Title;
        ToolbarItems.Add(
            new ToolbarItem { Href = "/live/" + LiveStream.Slug, Text = "View Livestream", ClassList = "btn btn-primary text-base-100" }
        );

        Bets = await DbContext.Bets.AsNoTracking().OrderBy(p => p.CreatedAt).Where(p => p.LivestreamGuid == LiveStream.Guid).ToListAsync();
        TotalBets = Bets.Count;
        TotalPlayer1Bets = Bets.Count(p => p.BetOnPlayer == 1);
        TotalPlayer2Bets = Bets.Count(p => p.BetOnPlayer == 2);
        TotalPoints = Bets.Sum(p => p.PointsBet);
        TotalPlayer1Points = Bets.Where(p => p.BetOnPlayer == 1).Sum(p => p.PointsBet);
        TotalPlayer2Points = Bets.Where(p => p.BetOnPlayer == 2).Sum(p => p.PointsBet);
    }

}