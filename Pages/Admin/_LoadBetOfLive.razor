@page "/Admin/LoadBetOfLive/{LiveId:int}"
@using Affiliate.Application.Dtos
@using Affiliate.Application.Extensions
@layout EmptyLayout
@inject LivestreamService LivestreamService

<div class="overflow-x-auto overflow-y-auto" style="height: 500px;">
    <table class="min-w-full divide-y divide-gray-200">
        <thead>
        <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User Name</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Bet Date</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Bet On Player</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Points Bet</th>
        </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
        @if (BetList is { Count: > 0 })
        {
            foreach (var bet in BetList)
            {
                <tr>
                    <td class="px-6 py-4 whitespace-nowrap">@bet.UserName</td>
                    <td class="px-6 py-4 whitespace-nowrap">@bet.BetDate.ToString("dd/MM/yyyy HH:mm")</td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        @if (bet.BetOnPlayer == 1)
                        {
                            @LiveStream?.Player1Name
                        }
                        else
                        {
                            @LiveStream?.Player2Name
                        }
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">@bet.PointsBet.AddDecimalSeparator()</td>
                </tr>
            }
        }
        </tbody>
    </table>
</div>

@code {
    [Parameter] public int LiveId { get; set; }

    private List<BetDto> BetList { get; set; } = [];
    private Livestream? LiveStream { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);
        LiveStream = await LivestreamService.GetLiveAsync(LiveId);
        if (LiveStream != null)
        {
            BetList = await LivestreamService.GetLiveBets(LiveStream.Guid);
        }
    }

}